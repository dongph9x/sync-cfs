---
import Layout from '../layouts/Layout.astro';
import { requireAuth } from '../lib/session';
import type { User } from '../lib/auth';

// Require authentication
const user = await requireAuth(Astro) as User;

const seo = {
  title: 'Dashboard - Discord Forum',
  description: 'Quản lý tài khoản và xem thống kê của bạn',
  image: '/og-image.jpg',
};
---

<Layout seo={seo}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900">Dashboard</h1>
      <p class="text-lg text-gray-600 mt-2">Chào mừng bạn trở lại, {user.username}!</p>
    </div>

    <!-- User Profile Card -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <div class="flex items-center space-x-4">
        <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center">
          <span class="text-2xl font-bold text-blue-600">
            {user.username.substring(0, 2).toUpperCase()}
          </span>
        </div>
        
        <div class="flex-1">
          <h2 class="text-xl font-semibold text-gray-900">{user.username}</h2>
          <p class="text-gray-600">{user.email}</p>
          <div class="flex items-center space-x-2 mt-2">
            <span class="px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800">
              {user.role === 'admin' && 'Admin'}
              {user.role === 'moderator' && 'Moderator'}
              {user.role === 'editor' && 'Editor'}
              {user.role === 'presenter' && 'Presenter'}
              {user.role === 'viewer' && 'Viewer'}
              {user.role === 'user' && 'User'}
            </span>
          </div>
        </div>

        <div class="text-right">
          <p class="text-sm text-gray-600">Thành viên từ</p>
          <p class="text-sm font-medium text-gray-900">
            {new Date(user.created_at).toLocaleDateString('vi-VN')}
          </p>
        </div>
      </div>
    </div>

    <!-- Quick Actions -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
      {user.role === 'admin' && (
        <div class="bg-white rounded-lg shadow-md p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-lg font-medium text-gray-900">Quản trị</h3>
              <p class="text-sm text-gray-600">Quản lý hệ thống</p>
            </div>
          </div>
          <div class="mt-4">
            <a href="/admin" class="text-red-600 hover:text-red-800 text-sm font-medium">
              Truy cập →
            </a>
          </div>
        </div>
      )}
      
      {user.role === 'admin' && (
        <div class="bg-white rounded-lg shadow-md p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-lg font-medium text-gray-900">Sync Data</h3>
              <p class="text-sm text-gray-600">Đồng bộ dữ liệu từ Discord</p>
            </div>
          </div>
          <div class="mt-4 space-y-2">
            <button 
              id="syncDataBtn"
              class="w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              Sync Data
            </button>
            <button 
              id="forceFullSyncBtn"
              class="w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500"
            >
              <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
              Force Full Sync
            </button>
          </div>
        </div>
      )}
      
      {(user.role === 'admin' || user.role === 'editor') && (
        <div class="bg-white rounded-lg shadow-md p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-lg font-medium text-gray-900">Podcast</h3>
              <p class="text-sm text-gray-600">Quản lý podcast schedule</p>
            </div>
          </div>
          <div class="mt-4">
            <a href="/podcast" class="text-purple-600 hover:text-purple-800 text-sm font-medium">
              Truy cập →
            </a>
          </div>
        </div>
      )}
      
      {(user.role === 'presenter') && (
        <div class="bg-white rounded-lg shadow-md p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-lg font-medium text-gray-900">Presenter</h3>
              <p class="text-sm text-gray-600">Quản lý podcast schedule</p>
            </div>
          </div>
          <div class="mt-4">
            <a href="/presenter" class="text-green-600 hover:text-green-800 text-sm font-medium">
              Truy cập →
            </a>
          </div>
        </div>
      )}
    </div>

    <!-- Account Actions -->
    <div class="bg-white rounded-lg shadow-md p-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Tài khoản</h3>
      <div class="space-y-4">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-gray-900">Email</p>
            <p class="text-sm text-gray-600">{user.email}</p>
          </div>
        </div>
        
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-gray-900">Đăng nhập lần cuối</p>
            <p class="text-sm text-gray-600">
              {user.last_login ? new Date(user.last_login).toLocaleString('vi-VN') : 'Chưa có'}
            </p>
          </div>
        </div>

        <div class="border-t pt-4">
          <a 
            href="/api/auth/logout" 
            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
          >
            <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
            </svg>
            Đăng xuất
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Sync Data functionality
  const syncDataBtn = document.getElementById('syncDataBtn');
  const forceFullSyncBtn = document.getElementById('forceFullSyncBtn');

  if (syncDataBtn) {
    syncDataBtn.addEventListener('click', async () => {
      try {
        // Disable button and show loading state
        (syncDataBtn as HTMLButtonElement).disabled = true;
        syncDataBtn.innerHTML = `
          <svg class="animate-spin h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Syncing...
        `;

        const response = await fetch('/api/admin/sync-data', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ forceFull: false })
        });

        const data = await response.json();

        if (data.success) {
          alert('✅ Sync completed successfully!');
        } else {
          alert('❌ Sync failed: ' + data.error);
        }
      } catch (error) {
        console.error('Sync error:', error);
        alert('❌ Sync failed: ' + (error as Error).message);
      } finally {
        // Re-enable button and restore original text
        (syncDataBtn as HTMLButtonElement).disabled = false;
        syncDataBtn.innerHTML = `
          <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
          Sync Data
        `;
      }
    });
  }

  if (forceFullSyncBtn) {
    forceFullSyncBtn.addEventListener('click', async () => {
      if (!confirm('⚠️ Force Full Sync sẽ đồng bộ lại toàn bộ dữ liệu. Bạn có chắc chắn muốn tiếp tục?')) {
        return;
      }

      try {
        // Disable button and show loading state
        (forceFullSyncBtn as HTMLButtonElement).disabled = true;
        forceFullSyncBtn.innerHTML = `
          <svg class="animate-spin h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Force Syncing...
        `;

        const response = await fetch('/api/admin/sync-data', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ forceFull: true })
        });

        const data = await response.json();

        if (data.success) {
          alert('✅ Force Full Sync completed successfully!');
        } else {
          alert('❌ Force Full Sync failed: ' + data.error);
        }
      } catch (error) {
        console.error('Force sync error:', error);
        alert('❌ Force Full Sync failed: ' + (error as Error).message);
      } finally {
        // Re-enable button and restore original text
        (forceFullSyncBtn as HTMLButtonElement).disabled = false;
        forceFullSyncBtn.innerHTML = `
          <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
          Force Full Sync
        `;
      }
    });
  }
</script>
