---
import Layout from "../../../layouts/Layout.astro";
import TreeView, { TreeItem } from "../../../components/TreeView.tsx";
import {
    createPool,
    getThreadsByChannelSlug,
    getChannelBySlug,
    getAllChannels,
    type Channel,
    type Thread,
} from "../../../lib/db";
import { generateStructuredData } from "../../../lib/seo";

export async function getStaticPaths() {
    // Initialize database connection
    const dbConfig = {
        host: import.meta.env.MYSQL_HOST || "localhost",
        port: parseInt(import.meta.env.MYSQL_PORT || "3306"),
        user: import.meta.env.MYSQL_USER || "root",
        password: import.meta.env.MYSQL_PASSWORD || "password",
        database: import.meta.env.MYSQL_DATABASE || "forum",
    };
    createPool(dbConfig);
    try {
        const channels = await getAllChannels();
        // Include all channels including confessions
        return channels.map((channel) => ({
            params: { channelSlug: channel.slug },
        }));
    } catch (error) {
        console.error("Failed to fetch channels for static paths:", error);
        return [];
    }
}

const { channelSlug } = Astro.params;
// Initialize database connection
const dbConfig = {
    host: import.meta.env.MYSQL_HOST || "localhost",
    port: parseInt(import.meta.env.MYSQL_PORT || "3306"),
    user: import.meta.env.MYSQL_USER || "root",
    password: import.meta.env.MYSQL_PASSWORD || "password",
    database: import.meta.env.MYSQL_DATABASE || "forum",
};
createPool(dbConfig);

let channel: Channel | null = null;
let threads: Thread[] = []; // Use imported Thread type
try {
    channel = await getChannelBySlug(channelSlug as string);
    if (channel) {
        threads = await getThreadsByChannelSlug(channelSlug as string);
    }
} catch (error) {
    console.error(`Failed to fetch data for channel ${channelSlug}:`, error);
}

// Convert threads to tree structure for TreeView
const treeItems: any[] = threads.map((thread) => ({ // Explicitly type treeItems
    id: thread.id,
    title: thread.title,
    type: 'thread' as const, // Use 'as const' for literal type
    thread: thread,
    isExpanded: false,
}));

// SEO
const seo = {
    title: `${channel?.name || "Channel"} - Forum`,
    description: channel?.description || `Xem các threads trong kênh ${channel?.name || "channel"}`,
    keywords: ["forum", "channel", channel?.name?.toLowerCase() || "channel", "discord", "cộng đồng"],
    canonical: `${Astro.site}forum/${channelSlug}/`,
};

// Generate structured data
const structuredData = generateStructuredData({
    type: "WebSite",
    name: channel?.name || "Channel",
    url: `/forum/${channelSlug}/`,
    description: channel?.description || `Xem các threads trong kênh ${channel?.name || "channel"}`,
});

// Generate breadcrumb schema
const breadcrumbSchema = generateStructuredData({
    type: "BreadcrumbList",
    breadcrumbs: [
        { name: "Home", url: Astro.site!.toString() },
        { name: "Forum", url: `${Astro.site}forum/` },
        { name: channel?.name || "Channel", url: `${Astro.site}forum/${channelSlug}/` },
    ],
});
---

<Layout seo={seo}>
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
    <script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />
    
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Breadcrumb Navigation -->
        <nav class="mb-8" aria-label="Breadcrumb">
            <ol class="flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a
                        href="/"
                        class="inline-flex items-center text-sm font-medium text-stack-gray-700 hover:text-stack-gray-900"
                    >
                        <svg
                            class="w-4 h-4 mr-2"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                            ></path>
                        </svg>
                        Trang chủ
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg
                            class="w-6 h-6 text-gray-400"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                clip-rule="evenodd"
                            ></path>
                        </svg>
                        <a
                            href="/forum/"
                            class="ml-1 text-sm font-medium text-stack-gray-700 hover:text-stack-gray-900 md:ml-2"
                        >
                            Forum
                        </a>
                    </div>
                </li>
                <li aria-current="page">
                    <div class="flex items-center">
                        <svg
                            class="w-6 h-6 text-gray-400"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                clip-rule="evenodd"
                            ></path>
                        </svg>
                        <span class="ml-1 text-sm font-medium text-stack-gray-500 md:ml-2">
                            {channel?.name || "Channel"}
                        </span>
                    </div>
                </li>
            </ol>
        </nav>

        <!-- Page Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">
                {channel?.name || "Kênh"}
            </h1>
            {channel?.description && (
                <p class="text-lg text-gray-600 mb-6">{channel.description}</p>
            )}
        </div>

        <!-- Tree View Container -->
        <div class="bg-gray-50 rounded-lg p-6">
            <div class="mb-4">
                <h2 class="text-xl font-semibold text-gray-900 mb-2">
                    Danh Sách Threads
                </h2>
                <p class="text-sm text-gray-600">
                    Kéo và thả các items để sắp xếp lại thứ tự hiển thị
                </p>
            </div>

            <div class="space-y-4">
                {threads.length > 0 ? (
                    <TreeView client:only="react" items={treeItems} channelSlug={channelSlug as string} itemsPerPage={15} />
                ) : (
                    <div class="text-center py-12">
                        <p class="text-gray-500 text-lg">Chưa có threads nào trong kênh này.</p>
                        <p class="text-gray-500 text-sm mt-2">Hãy là người đầu tiên tạo một thread!</p>
                    </div>
                )}
            </div>
        </div>
    </div>
</Layout>
