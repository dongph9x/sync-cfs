---
import Layout from "../../../layouts/Layout.astro";
import PostCard from "../../../components/PostCard.astro";
import {
    createPool,
    getPostsByThreadId,
    getAllChannels,
    getThreadsByChannelId,
    type Channel,
    type Thread,
    type Post,
} from "../../../lib/db";
import { generateStructuredData, sanitizeForSEO } from "../../../lib/seo";

export async function getStaticPaths() {
    // Initialize database connection
    const dbConfig = {
        host: import.meta.env.MYSQL_HOST || "localhost",
        port: parseInt(import.meta.env.MYSQL_PORT || "3306"),
        user: import.meta.env.MYSQL_USER || "root",
        password: import.meta.env.MYSQL_PASSWORD || "password",
        database: import.meta.env.MYSQL_DATABASE || "forum",
    };

    createPool(dbConfig);

    const paths = [];

    try {
        const channels = await getAllChannels();

        for (const channel of channels) {
            const threads = await getThreadsByChannelId(channel.id);
            console.log(threads);
            for (const thread of threads) {
                paths.push({
                    params: {
                        channelSlug: channel.slug,
                        threadSlug: thread.slug,
                    },
                    props: {
                        channel,
                        thread,
                    },
                });
            }
        }
    } catch (error) {
        console.error("Failed to fetch threads for static paths:", error);
    }

    return paths;
}

interface Props {
    channel: Channel;
    thread: Thread;
}

const { channel, thread } = Astro.props;

// Initialize database connection
const dbConfig = {
    host: import.meta.env.MYSQL_HOST || "localhost",
    port: parseInt(import.meta.env.MYSQL_PORT || "3306"),
    user: import.meta.env.MYSQL_USER || "root",
    password: import.meta.env.MYSQL_PASSWORD || "password",
    database: import.meta.env.MYSQL_DATABASE || "forum",
};

createPool(dbConfig);

// Fetch posts for this thread
let posts: Post[] = [];
try {
    console.log("Fetching posts for thread ID:", thread.id);
    posts = await getPostsByThreadId(thread.id);
    console.log("Found posts:", posts.length);
} catch (error) {
    console.error("Failed to fetch posts:", error);
}

const seo = {
    title: `${thread.title} - ${channel.name}`,
    description: sanitizeForSEO(
        thread.body_html || `Discussion thread: ${thread.title}`,
    ),
    keywords: [
        "forum",
        "thread",
        channel.name.toLowerCase(),
        "discord",
        "community",
        ...(thread.tags || []),
    ],
    canonical: `${Astro.site}forum/${channel.slug}/${thread.slug}/`,
};

// Generate structured data
const breadcrumbSchema = generateStructuredData({
    type: "BreadcrumbList",
    breadcrumbs: [
        { name: "Home", url: Astro.site!.toString() },
        { name: "Forum", url: `${Astro.site}forum/` },
        { name: channel.name, url: `${Astro.site}forum/${channel.slug}/` },
        {
            name: thread.title,
            url: `${Astro.site}forum/${channel.slug}/${thread.slug}/`,
        },
    ],
});

const qaSchema = generateStructuredData({
    type: "QAPage",
    name: thread.title,
    author: thread.author_alias,
    dateCreated: thread.created_at,
    answerCount: posts.length,
});
---

<Layout seo={seo}>
    <!-- Structured Data -->
    <script
        type="application/ld+json"
        set:html={JSON.stringify(breadcrumbSchema)}
    />
    <script type="application/ld+json" set:html={JSON.stringify(qaSchema)} />

    <div
        class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8"
        data-pagefind-body
        data-pagefind-meta="title:{thread.title}"
        data-pagefind-meta="author:{thread.author_alias}"
        data-pagefind-meta="channel:{channel.name}"
        data-pagefind-meta="type:thread"
        data-pagefind-meta="date:{thread.created_at.toISOString()}"
    >
        <!-- Breadcrumb -->
        <nav class="flex mb-8" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a
                        href="/"
                        class="inline-flex items-center text-sm font-medium text-stack-gray-700 hover:text-stack-blue"
                    >
                        <svg
                            class="w-4 h-4 mr-2"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                            ></path>
                        </svg>
                        Home
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg
                            class="w-6 h-6 text-stack-gray-400"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                clip-rule="evenodd"></path>
                        </svg>
                        <a
                            href="/forum/"
                            class="ml-1 text-sm font-medium text-stack-gray-700 hover:text-stack-blue md:ml-2"
                            >Forum</a
                        >
                    </div>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg
                            class="w-6 h-6 text-stack-gray-400"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                clip-rule="evenodd"></path>
                        </svg>
                        <a
                            href={`/forum/${channel.slug}/`}
                            class="ml-1 text-sm font-medium text-stack-gray-700 hover:text-stack-blue md:ml-2"
                            >{channel.name}</a
                        >
                    </div>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg
                            class="w-6 h-6 text-stack-gray-400"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                clip-rule="evenodd"></path>
                        </svg>
                        <span
                            class="ml-1 text-sm font-medium text-stack-gray-500 md:ml-2"
                            >{thread.title}</span
                        >
                    </div>
                </li>
            </ol>
        </nav>

        <!-- Thread Header -->
        <div class="mb-8">
            <div class="flex items-start justify-between mb-4">
                <div class="flex-1">
                    <h1
                        class="text-3xl font-bold text-stack-gray-900 mb-4"
                        data-pagefind-meta="title"
                    >
                        {thread.title}
                    </h1>

                    <!-- Tags -->
                    {
                        thread.tags && thread.tags.length > 0 && (
                            <div
                                class="flex flex-wrap gap-2 mb-4"
                                data-pagefind-meta="tags"
                            >
                                {thread.tags.map((tag: string) => (
                                    <span class="badge-tag">{tag}</span>
                                ))}
                            </div>
                        )
                    }
                </div>

                <!-- Thread stats -->
                <div class="flex-shrink-0 ml-6 text-center">
                    <div class="stats-number text-2xl text-stack-blue">
                        {posts.length}
                    </div>
                    <div class="stats-label">replies</div>
                </div>
            </div>

            <div
                class="flex items-center space-x-6 text-sm text-stack-gray-600"
            >
                <time
                    datetime={thread.created_at.toISOString()}
                    class="flex items-center"
                >
                    <svg
                        class="w-4 h-4 mr-1"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                        ></path>
                    </svg>
                    Asked {
                        new Intl.DateTimeFormat("en-US", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                            hour: "2-digit",
                            minute: "2-digit",
                        }).format(thread.created_at)
                    }
                </time>

                {
                    thread.updated_at > thread.created_at && (
                        <time
                            datetime={thread.updated_at.toISOString()}
                            class="flex items-center"
                        >
                            <svg
                                class="w-4 h-4 mr-1"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                                />
                            </svg>
                            Modified{" "}
                            {new Intl.DateTimeFormat("en-US", {
                                year: "numeric",
                                month: "long",
                                day: "numeric",
                                hour: "2-digit",
                                minute: "2-digit",
                            }).format(thread.updated_at)}
                        </time>
                    )
                }
            </div>
        </div>

        <!-- Original Thread Post -->
        {
            thread.body_html && (
                <div class="mb-8" data-pagefind-body>
                    <PostCard
                        post={{
                            id: thread.id,
                            thread_id: thread.id,
                            author_alias: thread.author_alias,
                            body_html: thread.body_html,
                            reply_to_id: null,
                            reply_to_author_alias: null,
                            created_at: thread.created_at,
                            updated_at: thread.updated_at,
                        }}
                        isOriginalPost={true}
                    />
                </div>
            )
        }

        <!-- Replies Section -->
        {
            posts.length > 0 && (
                <div class="mb-8">
                    <h2 class="text-2xl font-bold text-stack-gray-900 mb-6">
                        {posts.length === 1
                            ? "1 Reply"
                            : `${posts.length} Replies`}
                    </h2>

                    <div class="space-y-6">
                        {posts.map((post) => (
                            <PostCard post={post} />
                        ))}
                    </div>
                </div>
            )
        }

        {
            posts.length === 0 && !thread.body_html && (
                <div class="text-center py-12">
                    <svg
                        class="w-12 h-12 text-stack-gray-400 mx-auto mb-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
                        />
                    </svg>
                    <h3 class="text-lg font-medium text-stack-gray-900 mb-2">
                        No content available
                    </h3>
                    <p class="text-stack-gray-600">
                        This thread doesn't have any content or replies yet.
                    </p>
                </div>
            )
        }

        <!-- Join Discord CTA -->
        <div
            class="mt-12 text-center bg-gradient-to-r from-stack-blue to-indigo-600 text-white rounded-xl p-8"
        >
            <h3 class="text-2xl font-bold mb-4">Continue the Discussion</h3>
            <p class="text-lg mb-6 opacity-90">
                This is an archived thread. Join our Discord server to
                participate in live discussions!
            </p>
            <a
                href={import.meta.env.DISCORD_INVITE_URL ||
                    "https://discord.gg/your-invite-code"}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center px-6 py-3 bg-white text-stack-blue font-semibold rounded-lg hover:bg-gray-100 transition-colors"
            >
                <svg
                    class="w-5 h-5 mr-2"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028c.462-.63.874-1.295 1.226-1.994a.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z"
                    ></path>
                </svg>
                Join Live Discussion
            </a>
        </div>
    </div>
</Layout>
