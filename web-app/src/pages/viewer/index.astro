---
import Layout from "../../layouts/Layout.astro";
import { requireRole } from "../../lib/session";
import { createPool, getAllChannels, getThreadsByChannelId } from "../../lib/db";
import type { Channel, Thread } from "../../lib/db";

// Require viewer role
await requireRole(Astro, ['viewer', 'editor', 'admin']);

// Initialize database
createPool({
  host: import.meta.env.MYSQL_HOST || 'localhost',
  port: parseInt(import.meta.env.MYSQL_PORT || '3306'),
  user: import.meta.env.MYSQL_USER || 'root',
  password: import.meta.env.MYSQL_PASSWORD || '',
  database: import.meta.env.MYSQL_DATABASE || 'forum'
});

// Get all channels and their threads
const channels = await getAllChannels();
const channelThreads: { [key: string]: Thread[] } = {};

for (const channel of channels) {
  channelThreads[channel.id] = await getThreadsByChannelId(channel.id);
}

// SEO
const seo = {
  title: "Quản Trị - Viewer",
  description: "Trang quản trị cho viewer - Xem threads",
  keywords: ["quản trị", "viewer", "threads", "forum"],
  canonical: `${Astro.site}viewer/`,
};
---

<Layout seo={seo}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900">Quản Trị - Viewer</h1>
      <p class="mt-2 text-gray-600">Xem và quản lý threads trong các kênh (Chỉ xem)</p>
    </div>

    <!-- Channel Tabs -->
    <div class="border-b border-gray-200 mb-6">
      <nav class="-mb-px flex space-x-8" aria-label="Tabs">
        {channels.map((channel, index) => (
          <button
            class="channel-tab whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm cursor-pointer"
            data-channel-id={channel.id}
            data-channel-index={index}
            class:list={[
              index === 0 ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
            ]}
          >
            {channel.name} ({channelThreads[channel.id]?.length || 0})
          </button>
        ))}
      </nav>
    </div>

    <!-- Thread List -->
    <div class="bg-white shadow overflow-hidden sm:rounded-md">
      <div id="thread-list">
        {channels.map((channel, channelIndex) => (
          <div 
            class="channel-content"
            data-channel-id={channel.id}
            style={channelIndex === 0 ? 'display: block;' : 'display: none;'}
          >
            <div class="px-4 py-5 sm:p-6">
              <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">
                {channel.name}
              </h3>
              
              {channelThreads[channel.id] && channelThreads[channel.id].length > 0 ? (
                <div class="space-y-4">
                  {channelThreads[channel.id].map((thread) => (
                    <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50">
                      <div class="flex justify-between items-start">
                        <div class="flex-1">
                          <h4 class="text-lg font-medium text-gray-900 mb-2">
                            {thread.title}
                          </h4>
                          <div class="text-sm text-gray-500 space-y-1">
                            <p><strong>Tác giả:</strong> {thread.author_alias}</p>
                            <p><strong>Rank:</strong> {thread.thread_rank}</p>
                            <p><strong>Ngày tạo:</strong> {new Date(thread.created_at).toLocaleDateString('vi-VN')}</p>
                            <p><strong>Reply:</strong> {thread.reply_count}</p>
                          </div>
                          {thread.body_html && (
                            <div class="mt-3 prose prose-sm max-w-none">
                              <div set:html={thread.body_html.substring(0, 200) + (thread.body_html.length > 200 ? '...' : '')} />
                            </div>
                          )}
                        </div>
                        <div class="ml-4 flex space-x-2">
                          <a
                            href={`/forum/${channel.slug}/${thread.slug}`}
                            target="_blank"
                            class="inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                          >
                            Xem
                          </a>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <div class="text-center py-8">
                  <p class="text-gray-500">Chưa có threads nào trong kênh này.</p>
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <script>
    // Channel tab switching
    document.addEventListener('DOMContentLoaded', function() {
      const tabs = document.querySelectorAll('.channel-tab');
      const contents = document.querySelectorAll('.channel-content');

      tabs.forEach(tab => {
        tab.addEventListener('click', function() {
          const channelId = this.getAttribute('data-channel-id');
          const channelIndex = parseInt(this.getAttribute('data-channel-index') || '0');

          // Update tab styles
          tabs.forEach(t => {
            t.classList.remove('border-blue-500', 'text-blue-600');
            t.classList.add('border-transparent', 'text-gray-500');
          });
          this.classList.remove('border-transparent', 'text-gray-500');
          this.classList.add('border-blue-500', 'text-blue-600');

          // Show/hide content
          contents.forEach((content, index) => {
            if (index === channelIndex) {
              content.style.display = 'block';
            } else {
              content.style.display = 'none';
            }
          });
        });
      });
    });
  </script>
</Layout>
